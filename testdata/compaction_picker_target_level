init 1
----

init_cp
----

queue
----

init 1
6: 1
----

init_cp
----

queue
----

init 1
6: 1000000
----

init_cp
----

queue
----

init 1
5: 1
6: 10
----

init_cp
----

queue
----
L5->L6: 1.0

init 1
5: 2
6: 10
----

init_cp
----

queue
----
L5->L6: 2.0

# Smoothing multiplier is
# `(size(Lbottom)/size(Lbase))^(Lbottom-Lbase) = (30/1)^(1/(6-4)) = 30^(1/2)`
#
# size(L4) = size(Lbase) = 1
# size(L5) = size(L4) * 30^(1/2) ~= 5
# size(L6) = size(L5) * 30^(1/2) = 30

init 1
5: 2
6: 30
----

init_cp
----

queue
----

init 1
4: 2
5: 2
6: 100
----

init_cp
----

queue
----
L4->L5: 2.0

init 1
4: 1
5: 2
6: 100
----

init_cp
----

queue
----
L4->L5: 1.0

init 1
4: 1
5: 11
6: 100
----

init_cp
----

queue
----
L5->L6: 1.1
L4->L5: 1.0

init 1
4: 2
5: 11
6: 100
----

init_cp
----

queue
----
L4->L5: 2.0
L5->L6: 1.1

init 1
0: 4
----

init_cp
----

queue
----
L0->L6: 1.0

init 1
0: 5
----

init_cp
----

queue
----
L0->L6: 1.2

init 1
0: 5
5: 2
6: 10
----

init_cp
----

queue
----
L5->L6: 2.0
L0->L5: 1.2

pick
----
startLevel: 5, outputLevel: 6

pick
----
startLevel: 0, outputLevel: 5

init_cp
----

pick
----
startLevel: 5, outputLevel: 6

pick ongoing=(5,6)
----
no compaction

init 1
0: 5
4: 2
5: 3
6: 10
----

init_cp
----

queue
----
L4->L5: 2.0
L0->L4: 1.2
L5->L6: 1.0

pick ongoing=(5,6)
----
startLevel: 0, outputLevel: 4

pick
----
startLevel: 5, outputLevel: 6

init_cp
----

queue
----
L4->L5: 2.0
L0->L4: 1.2
L5->L6: 1.0

pick ongoing=(0,5)
----
no compaction

init 1
0: 6
6: 10
----

init_cp ongoing=(0,5)
----

queue
----
L0->L0: 1.5

pick
----
startLevel: 0, outputLevel: 0

init_cp ongoing=(0,5)
----

queue
----
L0->L0: 1.5

pick ongoing=(0,5)
----
startLevel: 0, outputLevel: 0
